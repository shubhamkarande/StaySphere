---
// Filter sidebar for listings page
---

<div class="bg-white rounded-lg shadow-sm p-6 sticky top-6">
  <h3 class="text-lg font-semibold text-gray-900 mb-4">Filters</h3>

  <form id="filter-form" class="space-y-6">
    <!-- Price Range -->
    <div>
      <h4 class="font-medium text-gray-900 mb-3">Price Range</h4>
      <div class="flex items-center space-x-3">
        <div>
          <label class="block text-xs text-gray-500 mb-1">Min</label>
          <input
            type="number"
            name="min_price"
            placeholder="$0"
            class="w-full px-3 py-2 border border-gray-300 rounded-md text-sm focus:outline-none focus:ring-2 focus:ring-blue-500"
          />
        </div>
        <div class="text-gray-400">-</div>
        <div>
          <label class="block text-xs text-gray-500 mb-1">Max</label>
          <input
            type="number"
            name="max_price"
            placeholder="$1000+"
            class="w-full px-3 py-2 border border-gray-300 rounded-md text-sm focus:outline-none focus:ring-2 focus:ring-blue-500"
          />
        </div>
      </div>
    </div>

    <!-- Property Type -->
    <div>
      <h4 class="font-medium text-gray-900 mb-3">Property Type</h4>
      <div class="space-y-2">
        {
          ["house", "apartment", "condo", "villa", "cabin", "other"].map(
            (type) => (
              <label class="flex items-center">
                <input
                  type="checkbox"
                  name="property_type[]"
                  value={type}
                  class="rounded border-gray-300 text-blue-600 focus:ring-blue-500"
                />
                <span class="ml-2 text-sm text-gray-700 capitalize">
                  {type}
                </span>
              </label>
            )
          )
        }
      </div>
    </div>

    <!-- Room Type -->
    <div>
      <h4 class="font-medium text-gray-900 mb-3">Room Type</h4>
      <div class="space-y-2">
        {
          ["entire_place", "private_room", "shared_room"].map((type) => (
            <label class="flex items-center">
              <input
                type="radio"
                name="room_type"
                value={type}
                class="border-gray-300 text-blue-600 focus:ring-blue-500"
              />
              <span class="ml-2 text-sm text-gray-700">
                {type === "entire_place"
                  ? "Entire place"
                  : type === "private_room"
                    ? "Private room"
                    : "Shared room"}
              </span>
            </label>
          ))
        }
      </div>
    </div>

    <!-- Bedrooms -->
    <div>
      <h4 class="font-medium text-gray-900 mb-3">Bedrooms</h4>
      <div class="grid grid-cols-4 gap-2">
        {
          ["Any", "1", "2", "3", "4+"].map((num) => (
            <button
              type="button"
              data-bedrooms={num === "Any" ? "" : num === "4+" ? "4" : num}
              class="bedroom-btn px-3 py-2 text-sm border border-gray-300 rounded-md hover:border-gray-400 focus:outline-none focus:ring-2 focus:ring-blue-500"
            >
              {num}
            </button>
          ))
        }
      </div>
    </div>

    <!-- Bathrooms -->
    <div>
      <h4 class="font-medium text-gray-900 mb-3">Bathrooms</h4>
      <div class="grid grid-cols-4 gap-2">
        {
          ["Any", "1", "2", "3+"].map((num) => (
            <button
              type="button"
              data-bathrooms={num === "Any" ? "" : num === "3+" ? "3" : num}
              class="bathroom-btn px-3 py-2 text-sm border border-gray-300 rounded-md hover:border-gray-400 focus:outline-none focus:ring-2 focus:ring-blue-500"
            >
              {num}
            </button>
          ))
        }
      </div>
    </div>

    <!-- Amenities -->
    <div>
      <h4 class="font-medium text-gray-900 mb-3">Amenities</h4>
      <div class="space-y-2">
        {
          [
            "wifi",
            "kitchen",
            "parking",
            "pool",
            "gym",
            "pet_friendly",
            "air_conditioning",
            "heating",
            "washer",
            "tv",
          ].map((amenity) => (
            <label class="flex items-center">
              <input
                type="checkbox"
                name="amenities[]"
                value={amenity}
                class="rounded border-gray-300 text-blue-600 focus:ring-blue-500"
              />
              <span class="ml-2 text-sm text-gray-700 capitalize">
                {amenity.replace("_", " ")}
              </span>
            </label>
          ))
        }
      </div>
    </div>

    <!-- Instant Book -->
    <div>
      <label class="flex items-center">
        <input
          type="checkbox"
          name="instant_book"
          value="1"
          class="rounded border-gray-300 text-blue-600 focus:ring-blue-500"
        />
        <span class="ml-2 text-sm text-gray-700">Instant Book</span>
      </label>
    </div>

    <!-- Apply Filters Button -->
    <div class="pt-4 border-t">
      <button
        type="submit"
        class="w-full bg-blue-600 text-white py-2 px-4 rounded-md hover:bg-blue-700 transition-colors font-medium"
      >
        Apply Filters
      </button>
      <button
        type="button"
        id="clear-filters"
        class="w-full mt-2 text-gray-600 hover:text-gray-800 text-sm"
      >
        Clear all filters
      </button>
    </div>
  </form>
</div>

<script>
  // Handle filter form submission
  document
    .getElementById("filter-form")
    ?.addEventListener("submit", function (e) {
      e.preventDefault();
      applyFilters();
    });

  // Handle bedroom/bathroom button selection
  document.querySelectorAll(".bedroom-btn, .bathroom-btn").forEach((btn) => {
    btn.addEventListener("click", function () {
      const isBedroomBtn = this.classList.contains("bedroom-btn");
      const siblings = document.querySelectorAll(
        isBedroomBtn ? ".bedroom-btn" : ".bathroom-btn"
      );

      siblings.forEach((s) => s.classList.remove("bg-blue-600", "text-white"));
      this.classList.add("bg-blue-600", "text-white");
    });
  });

  // Clear filters
  document
    .getElementById("clear-filters")
    ?.addEventListener("click", function () {
      const form = document.getElementById("filter-form") as HTMLFormElement;
      form.reset();

      // Reset button states
      document
        .querySelectorAll(".bedroom-btn, .bathroom-btn")
        .forEach((btn) => {
          btn.classList.remove("bg-blue-600", "text-white");
        });

      // Redirect to listings page without filters
      const url = new URL(window.location.href);
      const searchParams = new URLSearchParams();

      // Keep only search parameters, remove filters
      ["location", "checkin", "checkout", "guests"].forEach((param) => {
        const value = url.searchParams.get(param);
        if (value) searchParams.set(param, value);
      });

      window.location.href = `/listings?${searchParams.toString()}`;
    });

  function applyFilters() {
    const form = document.getElementById("filter-form") as HTMLFormElement;
    const formData = new FormData(form);
    const url = new URL(window.location.href);
    const params = new URLSearchParams(url.search);

    // Add form data to existing search params
    for (const [key, value] of formData.entries()) {
      if (value) {
        if (key.endsWith("[]")) {
          // Handle array parameters
          const baseKey = key.slice(0, -2);
          if (!params.has(baseKey)) {
            params.set(baseKey, value.toString());
          } else {
            params.set(baseKey, params.get(baseKey) + "," + value);
          }
        } else {
          params.set(key, value.toString());
        }
      }
    }

    // Add selected bedroom/bathroom counts
    const selectedBedroom = document.querySelector(".bedroom-btn.bg-blue-600");
    const selectedBathroom = document.querySelector(
      ".bathroom-btn.bg-blue-600"
    );

    if (selectedBedroom) {
      const bedrooms = selectedBedroom.getAttribute("data-bedrooms");
      if (bedrooms) params.set("bedrooms", bedrooms);
    }

    if (selectedBathroom) {
      const bathrooms = selectedBathroom.getAttribute("data-bathrooms");
      if (bathrooms) params.set("bathrooms", bathrooms);
    }

    // Reset to page 1 when applying filters
    params.set("page", "1");

    window.location.href = `/listings?${params.toString()}`;
  }

  // Initialize filters from URL parameters on page load
  window.addEventListener("DOMContentLoaded", function () {
    const url = new URL(window.location.href);
    const params = url.searchParams;

    // Set form values from URL parameters
    const form = document.getElementById("filter-form") as HTMLFormElement;
    if (!form) return;

    // Set input values
    ["min_price", "max_price", "room_type", "instant_book"].forEach((param) => {
      const value = params.get(param);
      if (value) {
        const input = form.querySelector(
          `[name="${param}"]`
        ) as HTMLInputElement;
        if (input) {
          if (input.type === "checkbox") {
            input.checked = true;
          } else {
            input.value = value;
          }
        }
      }
    });

    // Set checkbox arrays
    ["property_type", "amenities"].forEach((param) => {
      const values = params.get(param);
      if (values) {
        values.split(",").forEach((value) => {
          const input = form.querySelector(
            `[name="${param}[]"][value="${value}"]`
          ) as HTMLInputElement;
          if (input) input.checked = true;
        });
      }
    });

    // Set bedroom/bathroom buttons
    const bedrooms = params.get("bedrooms");
    if (bedrooms) {
      const btn = document.querySelector(`[data-bedrooms="${bedrooms}"]`);
      if (btn) {
        btn.classList.add("bg-blue-600", "text-white");
      }
    }

    const bathrooms = params.get("bathrooms");
    if (bathrooms) {
      const btn = document.querySelector(`[data-bathrooms="${bathrooms}"]`);
      if (btn) {
        btn.classList.add("bg-blue-600", "text-white");
      }
    }
  });
</script>
